import 'package:cointicker/bloc/auth/auth_bloc.dart';
import 'package:cointicker/bloc/coin/coin_bloc.dart';
import 'package:cointicker/bloc/news/news_bloc.dart';
import 'package:cointicker/constants/theme_data.dart';
import 'package:cointicker/firebase_options.dart';
import 'package:cointicker/screens/about_screen.dart';
import 'package:cointicker/screens/auth/sign_in_screen.dart';
import 'package:cointicker/screens/auth/sign_up_screen.dart';
import 'package:cointicker/screens/price_screen.dart';
import 'package:cointicker/screens/news_screen.dart';
import 'package:cointicker/services/service_locator.dart';
import 'package:cointicker/widgets/bottom_nav_bar.dart';
import 'package:firebase_auth/firebase_auth.dart';
import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';
import 'package:sizer/sizer.dart';
import 'package:flutter_bloc/flutter_bloc.dart';
import 'package:toastification/toastification.dart';

final themeModeNotifier = ValueNotifier(ThemeMode.system);

void main() async {
  WidgetsFlutterBinding.ensureInitialized();

  await Firebase.initializeApp(
    options: DefaultFirebaseOptions.currentPlatform,
  );

  await dotenv.load();
  await setupLocator();

  runApp(const MyApp());
}

class MyApp extends StatelessWidget {
  const MyApp({super.key});
  @override
  Widget build(BuildContext context) {
    return MultiBlocProvider(
      providers: [
        BlocProvider<CoinBloc>(
          create: (context) => CoinBloc(),
        ),
        BlocProvider<NewsBloc>(
          create: (context) => NewsBloc(),
        ),
        BlocProvider<AuthBloc>(
          create: (context) => AuthBloc(FirebaseAuth.instance),
        ),
      ],
      child: ToastificationWrapper(
        child: Sizer(
          builder: (context, orientation, deviceType) {
            return ValueListenableBuilder<ThemeMode>(
              valueListenable: themeModeNotifier,
              builder: (_, ThemeMode currentMode, __) => MaterialApp(
                debugShowCheckedModeBanner: false,
                title: 'Flutter Demo',
                theme: lightTheme,
                darkTheme: darkTheme,
                themeMode: currentMode,
                // home: const BottomNavBar(),
                initialRoute: SignUpScreen.routeName,
                routes: {
                  BottomNavBar.routeName: (context) => const BottomNavBar(),
                  PriceScreen.routeName: (context) => const PriceScreen(),
                  NewsScreen.routeName: (context) => const NewsScreen(),
                  AboutScreen.routeName: (context) => const AboutScreen(),
                  SignUpScreen.routeName: (context) => const SignUpScreen(),
                  SignInScreen.routeName: (context) => const SignInScreen(),
                },
              ),
            );
          },
        ),
      ),
    );
  }
}

// // File generated by FlutterFire CLI.
// // ignore_for_file: type=lint
// import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
// import 'package:flutter/foundation.dart'
//     show defaultTargetPlatform, kIsWeb, TargetPlatform;

// /// Default [FirebaseOptions] for use with your Firebase apps.
// ///
// /// Example:
// /// ```dart
// /// import 'firebase_options.dart';
// /// // ...
// /// await Firebase.initializeApp(
// ///   options: DefaultFirebaseOptions.currentPlatform,
// /// );
// /// ```
// class DefaultFirebaseOptions {
//   static FirebaseOptions get currentPlatform {
//     if (kIsWeb) {
//       return web;
//     }
//     switch (defaultTargetPlatform) {
//       case TargetPlatform.android:
//         return android;
//       case TargetPlatform.iOS:
//         return ios;
//       case TargetPlatform.macOS:
//         return macos;
//       case TargetPlatform.windows:
//         return windows;
//       case TargetPlatform.linux:
//         throw UnsupportedError(
//           'DefaultFirebaseOptions have not been configured for linux - '
//           'you can reconfigure this by running the FlutterFire CLI again.',
//         );
//       default:
//         throw UnsupportedError(
//           'DefaultFirebaseOptions are not supported for this platform.',
//         );
//     }
//   }

//   static const FirebaseOptions web = FirebaseOptions(
//     apiKey: 'AIzaSyCoYwDaX4LGVyA_88nXeKoGPoWcGzttDIM',
//     appId: '1:839188101886:web:e1c0c215bfc433f8a343af',
//     messagingSenderId: '839188101886',
//     projectId: 'coinstalk-501a3',
//     authDomain: 'coinstalk-501a3.firebaseapp.com',
//     storageBucket: 'coinstalk-501a3.firebasestorage.app',
//     measurementId: 'G-R5S1X2J5J6',
//   );

//   static const FirebaseOptions android = FirebaseOptions(
//     apiKey: 'AIzaSyBAzXycFMbYhHyUrXf_IwKLEXoFsS5dZGI',
//     appId: '1:839188101886:android:d6800b77f8bc538ea343af',
//     messagingSenderId: '839188101886',
//     projectId: 'coinstalk-501a3',
//     storageBucket: 'coinstalk-501a3.firebasestorage.app',
//   );

//   static const FirebaseOptions ios = FirebaseOptions(
//     apiKey: 'AIzaSyAr7DRKBnun-39aoEwqumMBHyMUiLuYP1M',
//     appId: '1:839188101886:ios:706221f6fe7be693a343af',
//     messagingSenderId: '839188101886',
//     projectId: 'coinstalk-501a3',
//     storageBucket: 'coinstalk-501a3.firebasestorage.app',
//     iosBundleId: 'com.example.cointicker',
//   );

//   static const FirebaseOptions macos = FirebaseOptions(
//     apiKey: 'AIzaSyAr7DRKBnun-39aoEwqumMBHyMUiLuYP1M',
//     appId: '1:839188101886:ios:706221f6fe7be693a343af',
//     messagingSenderId: '839188101886',
//     projectId: 'coinstalk-501a3',
//     storageBucket: 'coinstalk-501a3.firebasestorage.app',
//     iosBundleId: 'com.example.cointicker',
//   );

//   static const FirebaseOptions windows = FirebaseOptions(
//     apiKey: 'AIzaSyCoYwDaX4LGVyA_88nXeKoGPoWcGzttDIM',
//     appId: '1:839188101886:web:3a01403190266501a343af',
//     messagingSenderId: '839188101886',
//     projectId: 'coinstalk-501a3',
//     authDomain: 'coinstalk-501a3.firebaseapp.com',
//     storageBucket: 'coinstalk-501a3.firebasestorage.app',
//     measurementId: 'G-WVGJPD5RGB',
//   );
// }
